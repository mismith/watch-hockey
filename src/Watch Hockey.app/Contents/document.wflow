<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>381</string>
	<key>AMApplicationVersion</key>
	<string>2.4</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>curl -s http://dnalloheoj.com/nhl/log.txt | sed -E "s/^.*\. $|^\/\/ [^ ]+ | ET \/\/$//g; s/ @ |: /,/g" | tr '\n' ',' | sed -E 's/^,*//g; s/,*$//g; s/,,,/|/g'</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/bin/bash</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>B5E8627B-E6B4-4754-B9FC-34F50AD4F4BB</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>52FFD848-1ACD-4F8F-9F3F-288E13EB8D1F</string>
				<key>ShowWhenRun</key>
				<false/>
				<key>UUID</key>
				<string>20BC1A55-2D80-4DC1-9AA4-44241D3F3767</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>745.500000:871.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- helper functionsto split(aString, delimiter)	set retVal to {}	set prevDelimiter to AppleScript's text item delimiters	set AppleScript's text item delimiters to {delimiter}	set retVal to every text item of aString	set AppleScript's text item delimiters to prevDelimiter	return retValend spliton replace_chars(this_text, search_string, replacement_string)	set AppleScript's text item delimiters to the search_string	set the item_list to every text item of this_text	set AppleScript's text item delimiters to the replacement_string	set this_text to the item_list as string	set AppleScript's text item delimiters to ""	return this_textend replace_charson run {input, parameters}		set propertyListPath to "~/Library/Preferences/com.mismith.watchhockey.plist"	set userFriendlyNames to {}	set feedURLs to {}		-- turn shell script output into applescript variables	repeat with game in split(item 1 of input, "|")		set pieces to split(game, ",")				if (count of pieces) is 7 then			--set t1code to item 6 of pieces			--set t2code to item 4 of pieces						set t1feed to item 7 of pieces			set t2feed to item 5 of pieces						set end of feedURLs to t1feed			set end of feedURLs to t2feed		end if				set gametime to item 1 of pieces		set t1name to item 2 of pieces		set t2name to item 3 of pieces				set userFriendlyName to gametime &amp; " - " &amp; t1name &amp; " (@ " &amp; t2name &amp; ")"		if (count of pieces) is not 7 then set userFriendlyName to "Available around " &amp; userFriendlyName		set end of userFriendlyNames to userFriendlyName				set userFriendlyName to gametime &amp; " - " &amp; t2name &amp; " (@ " &amp; t1name &amp; ")"		if (count of pieces) is not 7 then set userFriendlyName to "Available around " &amp; userFriendlyName		set end of userFriendlyNames to userFriendlyName	end repeat		-- handle user interaction	if (count of userFriendlyNames) is greater than 0 then				-- prompt with list of available feeds		set selectedFeeds to choose from list userFriendlyNames with prompt "Which feed(s) would you like to watch?" with multiple selections allowed		if (count of selectedFeeds) is greater than 0 then						-- prompt with list of available bitrates			set defaultBitrate to "3000"			try				-- load default bitrate, if present				tell application "System Events"					tell property list file propertyListPath						tell contents							set defaultBitrate to value of property list item "defaultBitrate"						end tell					end tell				end tell			end try			set selectedBitrate to choose from list {"400", "800", "1600", "3000", "4500"} with prompt "What bitrate do you want (kbps)?" default items {defaultBitrate}			if (count of selectedBitrate) is 1 then								-- save selected bitrate as default for next time				tell application "System Events"					-- create an empty property list dictionary item					set the parent_dictionary to make new property list item with properties {kind:record}					-- create new property list file using the empty dictionary list item as contents					set this_plistfile to make new property list file with properties {contents:parent_dictionary, name:propertyListPath}					-- add new property list items of each of the supported types					make new property list item at end of property list items of contents of this_plistfile with properties {kind:string, name:"defaultBitrate", value:selectedBitrate}				end tell								-- open all the feeds in quicktime				repeat with i from 1 to the length of userFriendlyNames					if selectedFeeds contains item i of userFriendlyNames then						if (count of feedURLs) is greater than or equal to i then							set feedURL to item i of feedURLs							set feedURL to replace_chars(feedURL, "_3000.", "_" &amp; selectedBitrate &amp; ".")														tell application "QuickTime Player"								activate								open URL feedURL							end tell						end if					end if				end repeat							end if		end if	else		display alert "Either something went wrong or there aren't any games streaming right now. Check back up to 15 minutes before game time."	end if	end run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>IgnoresInput</key>
				<false/>
				<key>InputUUID</key>
				<string>856C478C-2E45-4CC0-9566-04D916EE8F50</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>8BC6819D-8DEE-4C77-BC4D-FD8DE0C05782</string>
				<key>UUID</key>
				<string>CBB7AC12-E6D4-4392-99AC-D61818D5E9F4</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>745.500000:688.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>45C4215F-8899-493B-8CB1-111EA53F16FC</key>
		<dict>
			<key>from</key>
			<string>20BC1A55-2D80-4DC1-9AA4-44241D3F3767 - 20BC1A55-2D80-4DC1-9AA4-44241D3F3767</string>
			<key>to</key>
			<string>CBB7AC12-E6D4-4392-99AC-D61818D5E9F4 - CBB7AC12-E6D4-4392-99AC-D61818D5E9F4</string>
		</dict>
	</dict>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>335876A7-AEAE-433A-9856-39F26148CFD9</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Storage</string>
			<key>name</key>
			<string>data</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
